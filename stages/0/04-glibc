# Build script for glibc.
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025, John Unland

version=2.40

cd -- "$TMPDIR"

rm -rf glibc-${version}
unpack "${worktree}/sources/glibc-${version}.tar.xz"

# Build instructions
cd glibc-${version}

patch -p1 <"${worktree}/patches/glibc/glibc-${version}-fhs-1.patch"

# Create symlinks
case $(uname -m) in
    i?86)
        ln -sfv ld-linux.so.2 $LFS/lib/ld-lsb.so.3
        ;;
    x86_64)
        ln -sfv ../lib/ld-linux-x86-64.so.2 $LFS/lib64
        ln -sfv ../lib/ld-linux-x86-64.so.2 $LFS/lib64/ld-lsb-x86-64.so.3
        ;;
    aarch64)
        ln -sfv ../lib/ld-linux-aarch64.so.1 $LFS/lib
        ln -sfv ../lib/ld-linux-aarch64.so.1 $LFS/lib/ld-lsb-aarch64.so.3
        ;;
esac

mkdir build && cd build

echo "rootsbindir=/usr/sbin" >configparms
# LDFLAGS="$BTLDFLAGS -L${sysrootdir}/lib -Wl,-rpath,${sysrootdir}/lib
../configure \
    --prefix=/usr \
    --build=$(../scripts/config.guess) \
    --host=$target \
    --with-headers="${LFS}/usr/include" \
    --with-binutils="${LFS}/tools/bin" \
    --disable-nscd \
    --enable-kernel=4.19 \
    libc_cv_slibdir=/usr/lib \
    $multilib_options

#make -j${jobs} DESTDIR=${sysrootdir} install-bootstrap-headers=yes install-headers

make -j${jobs}

make -j${jobs} DESTDIR=${LFS} install

echo "Testing the waters..."

# Fix hardcoded path in ldd script
sed '/RTLDLIST=/s@/usr@@g' -i $LFS/bin/ldd

# Now run a sanity check
echo 'int main(){}' | $LFS_TGT-gcc -xc -

readelf -l a.out | grep ld-linux

rm -v a.out

echo "Done testing the waters."

# Find crt files
find ${LFS} -name crti*

cleanup() {
    cd -- "$TMPDIR" && rm -rf glibc-${version}
}
