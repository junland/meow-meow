#!/bin/bash
# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: 2025, John Unland

trap umount_chroot \
    HUP INT QUIT TERM \
    SIGHUP SIGINT SIGQUIT SIGILL \
    SIGABRT SIGTRAP SIGTERM SIGSEGV

msg() {
    printf '[\033[32m INFO\033[m ] %s\n' "$@"
}

fail() {
    printf '[\033[31m FAIL\033[m ] %s\n' "$@"
    exit 1
}

warn() {
    printf '[\033[33m WARN\033[m ] %s\n' "$@"
}

# Set the QEMU_STATIC_PATH environment variable to the path of the qemu-static binary
QEMU_STATIC_PATH=${QEMU_STATIC_PATH:-"/usr/bin/"}

# Jobs
CPU_JOBS=$(nproc)

mount_chroot() {
    msg "Mounting chroot..."
    mount -v --bind /dev $ROOTFS/dev
    mount -vt devpts devpts -o gid=5,mode=0620 $ROOTFS/dev/pts
    mount -vt proc proc $ROOTFS/proc
    mount -vt sysfs sysfs $ROOTFS/sys
    mount -vt tmpfs tmpfs $ROOTFS/run

    if [ -h $ROOTFS/dev/shm ]; then
      install -v -d -m 1777 $ROOTFS$(realpath /dev/shm)
    else
      mount -vt tmpfs -o nosuid,nodev tmpfs $ROOTFS/dev/shm
    fi

    msg "Done mounting chroot."
}

umount_chroot() {
    msg "Unmounting chroot..."
    # Define the required mount points
    mount_points=("$ROOTFS/dev/pts" "$ROOTFS/dev/shm" "$ROOTFS/dev" "$ROOTFS/run" "$ROOTFS/proc" "$ROOTFS/sys")

    # Make sure we dont have any left over mounts
    for point in "${mount_points[@]}"; do
        if mountpoint -q "$point"; then
            echo "Unmounting $point ..."
            if ! umount "$point"; then
                warn "Failed to unmount $point doing a lazy unmount ..."
                umount -l "$point"
            fi
        else
            echo "$point is not mounted."
        fi
    done
}

if [ -z "$1" ]; then
    fail "No rootfs directory has been specified"
fi

if [ ! -d "$1" ]; then
    fail "$1 is not a directory."
fi

ROOTFS=$1

mount_chroot

# If passed a second argument, run with qemu-$2-static
if [ -n "$2" ]; then
    chroot "$ROOTFS" $QEMU_STATIC_PATH/qemu-$2-static /usr/bin/env -i \
        HOME=/ \
        TERM="$TERM" \
        LC_ALL=POSIX \
        MAKEFLAGS="-j${CPU_JOBS}" \
        PS1='(chroot-qemu) \u:\w\$ '
        TESTSUITEFLAGS="-j${CPU_JOBS}" \
        PATH=/bin:/usr/bin:/sbin:/usr/sbin /bin/bash --login
fi

chroot "$ROOTFS" /usr/bin/env -i \
    HOME=/ \
    TERM="$TERM" \
    LC_ALL=POSIX \
    MAKEFLAGS="-j${CPU_JOBS}" \
    PS1='(chroot-native) \u:\w\$ ' \
    TESTSUITEFLAGS="-j${CPU_JOBS}" \
    PATH=/bin:/usr/bin:/sbin:/usr/sbin /bin/bash --login

umount_chroot

exit 0
